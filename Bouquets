class Solution {

bool daysReq(vector<int>& bloomDay, int m, int k , int days){
    int cnt = 0;
    int madeBou = 0;
    for(int i = 0 ; i < bloomDay.size() ; i++){
        if(days >= bloomDay[i]) cnt++;
        else{
            madeBou += cnt / k;
            cnt = 0;
        }

        // if(i == bloomDay.size() - 1){
        //     madeBou += cnt / k;
        // }
    }

    madeBou += cnt / k;
    return madeBou >= m;

}
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        
        if(bloomDay.size() < ((long long) m * k)) return -1;

        int lo = *min_element(bloomDay.begin(),bloomDay.end());
        int hi = *max_element(bloomDay.begin(),bloomDay.end());

       while(lo <= hi){
           int mid = lo + (hi -lo)/2;

            if(daysReq(bloomDay,m,k,mid)) hi = mid - 1;
            else lo = mid + 1;

       }

        return lo;
        
    }
};
