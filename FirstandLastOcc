class Solution {
public:

    int firstOcc(vector<int> & nums , int target){
        int s = 0 , e = nums.size()-1;
        int ind = -1;

        while(s <= e){
            int mid = s + (e - s)/2;

            if(nums[mid] == target){
                ind =  mid;
                e = mid - 1;
            }else if(nums[mid] < target){
                  s = mid + 1;  
            }else{
                e = mid - 1;

            }
        }

        return ind;

    }

    int secOcc(vector<int>& nums , int target){
        int s = 0 , e = nums.size() - 1;
        int ind = -1;

        while(s <= e){
            int mid = s + (e - s) / 2;

            if(nums[mid] == target){
                ind = mid;
                s = mid + 1;
            }else if(nums[mid] < target){
                s = mid + 1;
            }else{
                e = mid - 1;

            }

        }

        return ind;

    }

    vector<int> searchRange(vector<int>& nums, int target) {
        int first = firstOcc(nums,target);
        int sec = secOcc(nums,target);

        vector<int> ans;
        ans.push_back(first);
        ans.push_back(sec);

        return ans;

    }
};
